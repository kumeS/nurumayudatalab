はい、承知いたしました。
ご提示いただいた仕様書を、より明確で網羅的な内容になるようブラッシュアップしました。開発者間の認識齟齬を減らし、プロジェクトを円滑に進めることを目的としています。

-----

## 地震データ可視化＆AI分析プラットフォーム 機能仕様書

### 1\. プロジェクト概要

本プロジェクトは、公開されている地震データを活用し、インタラクティブな3D可視化と大規模言語モデル（LLM）による自動分析機能を提供するWebアプリケーションを開発するものです。単なるデータの可視化に留まらず、AIによる洞察を組み合わせることで、地震活動の現状把握をより深く、直感的に行うことを可能にします。

  * ターゲットユーザー: 防災意識の高い一般市民、研究者、教育関係者
  * 提供価値: 複雑な地震データを視覚的に分かりやすく提示し、専門家でなくても現状の傾向を理解できるサマリーを提供する。

-----

### 2\. 機能要件

#### 2.1. 地震データ可視化機能

ユーザーが地震活動を視覚的に探索・理解できる機能を提供します。

| 機能分類 | 機能名 | 詳細仕様 |
| :--- | :--- | :--- |
| メインビュー | 3D地震プロット | ・日本列島の地図上に、指定された期間の震源データを3Dプロットで表示する。<br>・緯度/経度をX/Y軸、震源の深さをZ軸としてマッピングする。 |
| | マップ表示 | ・背景地図としてMapboxのマップタイルを表示し、地理的情報を把握しやすくする。 |
| インタラクション | 地図操作 | ・マウスのドラッグでパン（移動）、ホイールでズーム（拡大・縮小）が可能。<br>・マウスの右ドラッグ（または特殊キー＋ドラッグ）でマップの回転と傾斜を調整できる。 |
| | 詳細情報ポップアップ | ・震源プロットにカーソルを合わせると、発生日時、マグニチュード、震源の深さ、地名などの詳細情報をポップアップで表示する。 |
| ビジュアライゼーション | マグニチュード表現 | ・色: マグニチュードの大きさに応じて色を段階的に変化させる（例: 小さい: 青 → 緑 → 黄 → 赤: 大きい）。<br>・サイズ: マグニチュードが大きいほど、プロットの半径を大きくする。 |
| コントロールパネル | 期間指定 | ・プリセット選択: 「過去24時間」「過去1週間」「過去1ヶ月」などのプリセットから期間をワンクリックで選択できる。<br>・カスタム範囲指定: カレンダーUIまたはスライダーで、任意の開始日・終了日を指定できる。 |
| | データフィルタリング | ・マグニチュード: スライダーで表示対象のマグニチュードの範囲（例: M3.0 〜 M8.0）を指定できる。<br>・深度: スライダーで表示対象の震源の深さの範囲（例: 0km 〜 500km）を指定できる。 |
| | 時系列アニメーション | ・「再生」ボタンを押すと、指定期間内の地震発生を時系列順にアニメーションで表示する。<br>・再生速度（速い/普通/遅い）を選択できる。 |

-----

### 3\. LLMによる現状分析機能

表示されている地震データに基づき、AIが分析サマリーを生成する機能です。

| 機能名 | 詳細仕様 |
| :--- | :--- |
| 分析実行UI | ・コントロールパネルに「AIによる現状サマリー」ボタンを設置する。<br>・ボタンがクリックされると、LLMによる分析が開始されたことを示すローディングアニメーションを表示する。 |
| データ送信 | ・ボタンクリック時、現在フィルタリングされている震源データ群（緯度、経度、深度、マグニチュード、日時）と選択期間をJSON形式でバックエンドサーバーに送信する。 |
| プロンプト生成（バックエンド） | ・サーバーは受信したデータを用いて、以下のような構造のプロンプトを生成し、LLM APIに送信する。 |
| 分析結果の表示 | ・LLMからの応答テキストを、マップ横（または下部）の専用エリアに整形して表示する。<br>・表示エリアはスクロール可能にし、必要に応じてコピーボタンを設置する。 |
| エラーハンドリング | ・LLMからの応答がエラーであった場合や、タイムアウトした場合は、その旨をユーザーに通知するメッセージを表示する。 |

#### 洗練されたプロンプトの例

```text
# 命令
あなたは優秀な地震データアナリストです。以下の制約条件と入力データに基づき、日本の地震活動の現状を分析し、専門知識がない人にも分かりやすくまとめてください。

# 制約条件
- 日本語で回答してください。
- 全体を300字程度の簡潔なサマリーにしてください。
- 以下の分析観点を必ず含めてください。
  1. 活動の全体傾向: 期間内の地震発生総数と、特に活発なエリア。
  2. 注目すべき地震: 期間内でマグニチュードが最も大きい地震について、その規模と場所を特記する。
  3. 特徴的な活動: 特定の地域（例: 能登半島、南海トラフ沿い）や特定の深度（例: 深発地震）で地震が集中しているか。
- 出力は以下のMarkdown形式に従ってください。

# 出力形式
### 地震活動サマリー ([期間])
全体傾向: [ここに分析結果を記述]
注目すべき地震: [ここに分析結果を記述]
特徴的な活動: [ここに分析結果を記述]

# 入力データ
- 期間: [選択された期間]
- 震源データ (JSON):
  [フロントエンドから送信されたJSONデータ]
```

-----

### 4\. データ要件

| 項目 | 仕様 |
| :--- | :--- |
| データソース | ・防災科学技術研究所（NIED）の強震モニタ、Hi-net等の公開API。<br>・気象庁が発表する震源・震度に関するデータ。 |
| データ形式 | ・GeoJSON またはそれに準ずるJSON形式を基本とする。 |
| データスキーマ（例） | ・`geometry.coordinates`: `[longitude, latitude, depth]`<br>・`properties.mag`: マグニチュード (数値)<br>・`properties.time`: 発生時刻 (Unixタイムスタンプ or ISO8601形式)<br>・`properties.place`: 地名 (文字列) |
| 追加データ | ・分析の精度向上のため、主要なプレート境界や活断層の地理データをオーバーレイ表示する。（GeoJSON形式） |
| 取得方法 | ・初期ロード: ページ読み込み時に、デフォルト期間のデータを取得。<br>・定期更新: 60秒間隔で`fetch()` APIを使用し、最新の地震データを非同期で取得・追加描画する。 |

-----

### 5\. 技術仕様

| カテゴリ | コンポーネント | 技術選定 | 理由 |
| :--- | :--- | :--- | :--- |
| フロントエンド | 言語/フレームワーク | HTML5, CSS3, JavaScript (ES6+)<br>（ReactやVue.jsの採用も推奨） | モダンなWeb開発の標準であり、エコシステムが豊富。コンポーネントベースのフレームワークは保守性を高める。 |
| | 可視化 | deck.gl | 大量の3D地理空間データをGPUアクセラレーションで高速に描画できるため。 |
| | マップ | Mapbox GL JS | 高品質な背景地図を提供し、deck.glとの親和性が非常に高い。 |
| | 2Dグラフ | Chart.js | 時系列データの推移など、補助的なグラフを容易に実装できる。 |
| バックエンド | サーバー環境 | Node.js (Express) または Python (Flask) | LLM APIとの連携やAPIキーの管理を行うプロキシサーバーとして軽量かつ迅速に構築できる。 |
| | LLM API | OpenAI API, Google AI (Gemini), Claude API 等 | プロジェクトの要件（コスト、レスポンス速度、日本語性能）に応じて最適なモデルを選択・切り替え可能にする。 |

-----

### 6\. 非機能要件

| 項目 | 要件 |
| :--- | :--- |
| パフォーマンス | ・初期表示: 3秒以内にインタラクティブな操作が可能になること。<br>・データ更新: 大量のデータを描画する際も、UIの操作がブロックされないこと。<br>・LLM応答: 分析リクエストから10秒以内に結果が表示されることを目標とする。 |
| UI/UX | ・直感的で分かりやすいインターフェースを心がける。<br>・PCおよびタブレット端末での表示に最適化されたレスポンシブデザインを採用する。<br>・色の使い方において、色覚多様性に配慮する。 |
| セキュリティ | ・LLMのAPIキーなどの認証情報は、バックエンドサーバーの環境変数で安全に管理し、フロントエンドに漏洩させない。 |
| 保守性 | ・コードはモジュール化し、コンポーネントごとの役割を明確に分離することで、将来的な機能追加や修正を容易にする。 |